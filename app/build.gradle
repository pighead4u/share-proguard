apply plugin: 'com.android.application'


tasks.whenTaskAdded { task ->
  if (task.name.toLowerCase().contains('test')
   || task.name.toLowerCase().contains('mock')) {
    task.enabled = false

    println "-----------------------------" + task.name
  }
}


def commitCount = Integer.parseInt('git rev-list master --count'.execute().text.trim())

android {
  compileSdkVersion rootProject.ext.android.compileSdkVersion
  buildToolsVersion rootProject.ext.android.buildToolsVersion

  defaultConfig {
    applicationId rootProject.ext.android.applicationId
    minSdkVersion rootProject.ext.android.minSdkVersion
    targetSdkVersion rootProject.ext.android.targetSdkVersion
    versionCode commitCount
    versionName "1.0"

    ndk {
      abiFilters "armeabi-v7a","armeabi"
    }
  }

  buildTypes {
    debug {
      buildConfigField "String", "yourName", "\"pighead\""
      resValue "string", "app_name", "Bilibili-debug"

      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    release {
      buildConfigField "String", "yourName", "\"pighead\""
      resValue "string", "app_name", "Bilibili-release"

      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile 'com.android.support:appcompat-v7:25.3.0'

  compile 'io.reactivex:rxandroid:1.2.1'
  compile 'io.reactivex:rxjava:1.1.6'

  compile project(':proguardlib')
}

task copyApk(type: Copy) {
  from("$buildDir/outputs/apk/")
  into("../apks/")
}

